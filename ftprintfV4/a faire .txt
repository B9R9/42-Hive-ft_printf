AVEC STR
+ = flag '+' results in undefined behavior with 's'
- = OK
# = flag '#' results in undefined behavior with 's'
  = flag ' ' results in undefined behavior with 's'
0 = flag '0' results in undefined behavior with 's'

AVEC CHAR
+ = flag '+' results in undefined behavior with 'c' conversion specifier
- = OK
# = flag '#' results in undefined behavior with 'c' conversion specifier
  = flag ' ' results in undefined behavior with 'c' conversion specifier
0 = flag '0' results in undefined behavior with 'c' conversion specifier
W = OK
. = precision used with 'c' conversion specifier, resulting in undefined behavior

AVEC D
+ = OK 
- = OK
# = flag '#' results in undefined behavior with 'd' conversion specifier
  = OK
0 = OK
W = OK
. = OK









ENVOIE UN INT
d de 0 a 2147483647 
ld de 2147483648 a 9223372036854775807
if n > 9223372036854775807 
return  error: integer literal is too large to be represented in a signed integer type, interpreting as unsigned

ENVOIE INT
i de 0 a 2147483647
li de 2147483648 to 9223372036854775807
if n > 9223372036854775807 
return  error: integer literal is too large

ENVOIE INT
o de 0 a 2147483647
lo de 2147483648  to 9223372036854775807
if n > 9223372036854775807 
return  error: integer literal is too large

ENVOIE INT
u   de  0 to 4294967295
lu and llu  de 4294967296 to  18446744073709551615
llu de              to 18446744073709551615ULL
if n >  18446744073709551615 return integer literal is too large

x de 0 to 2147483647 

option with ld
    + = OK       
    - = OK
    0 = OK
      = OK
    # = KO
    . = OK

combinaison:
    +0 = OK
    +  = flag ' ' is ignored when flag + is present
    +# = KO
    +- = OK
    .- = invalid conversion specifier '-'

diouxX 

X O I D Int 

